apply plugin: 'java'

version             = '0.1.0-SNAPSHOT'
status              = 'integration'
description         = 'Quasar WebActors StockActors'

ext.classifier      = ':jdk8' // ''
sourceCompatibility = 1.8     // 1.7
targetCompatibility = 1.8     // 1.7

ext.slf4jVer        = '1.7.12'
ext.servletVer      = '3.0.1'
ext.comsatVer       = '0.4.0'
ext.quasarVer       = '0.7.2'
ext.jacksonVer      = '2.3.3'
ext.junitVer        = '4.12'
ext.asmVer          = '5.0.4'
ext.jerseyVer       = '2.18'
ext.httpClientVer   = '4.5'
ext.httpCoreVer     = '4.4.1'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

configurations {
    quasar
    provided
}

sourceSets {
    main.compileClasspath = main.compileClasspath + configurations.provided
    test.compileClasspath = test.compileClasspath + configurations.provided
    test.runtimeClasspath = test.runtimeClasspath + configurations.provided
}

configurations.all {
    resolutionStrategy {
        failOnVersionConflict()

        force "com.fasterxml.jackson.core:jackson-core:$jacksonVer"
        force "com.fasterxml.jackson.core:jackson-databind:$jacksonVer"
        force "com.fasterxml.jackson.core:jackson-annotations:$jacksonVer"
        force "com.fasterxml.jackson.jaxrs:jackson-jaxrs-base:$jacksonVer"
        force "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$jacksonVer"
        force "org.apache.httpcomponents:httpclient:$httpClientVer"
        force "org.apache.httpcomponents:httpcore:$httpCoreVer"
        force "org.slf4j:slf4j-api:$slf4jVer"
        force "org.ow2.asm:asm:$asmVer"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
//    maven { url "https://oss.sonatype.org/content/repositories/releases" }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
//    maven { url 'https://maven.java.net/content/repositories/snapshots' }
}

test {
    beforeTest { desc ->
        logger.quiet("Running test: " + desc)
    }

    afterTest { desc, result ->
        if(result.resultType == TestResult.ResultType.FAILURE) {
            logger.quiet("Failed test ${desc.name} [${desc.className}] with exception: ${result.exception}")
            if(result.exception != null) {
                result.exception.printStackTrace()
            }
        }
    }
}

dependencies {
    compile "co.paralleluniverse:quasar-core:${quasarVer}${classifier}"
    compile "co.paralleluniverse:quasar-actors:$quasarVer"

    compile "co.paralleluniverse:comsat-jersey-server:$comsatVer"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVer"
    compile "co.paralleluniverse:comsat-httpclient:$comsatVer"

    compile "co.paralleluniverse:comsat-actors-api:$comsatVer"
    compile "co.paralleluniverse:comsat-actors-api:$comsatVer"
    compile "co.paralleluniverse:comsat-actors-servlet:$comsatVer"
    compile "co.paralleluniverse:comsat-test-utils:$comsatVer"

    compile "org.slf4j:slf4j-api:$slf4jVer"

    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVer"

    provided "javax.servlet:javax.servlet-api:$servletVer"

    quasar "co.paralleluniverse:quasar-core:${quasarVer}${classifier}@jar"

    runtime "org.slf4j:slf4j-simple:$slf4jVer"

    testCompile "junit:junit:$junitVer"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

defaultTasks 'compile'

apply plugin: 'application'

mainClassName = "quasarstocks.Application"
applicationDefaultJvmArgs = [
    "-javaagent:${configurations.quasar.singleFile}",
    "-Dco.paralleluniverse.fibers.verifyInstrumentation=true"
]
